<template>
  <!-- #ifdef APP -->
  <scroll-view class="page-scroll-view">
  <!-- #endif -->
    <view>
      <page-head :title="title"></page-head>
      <button @click="receiveMessage">接收服务端通知</button>
      <view>
        <view v-for="item in messages">{{item}}</view>
      </view>
    </view>
  <!-- #ifdef APP -->
  </scroll-view>
  <!-- #endif -->
</template>

<script>
  export default {
    data() {
      return {
        title: '服务端通知通道',
        messages: [] as string[]
      }
    },
    methods: {
      async receiveMessage() {
        this.messages.splice(0, this.messages.length)
        const sseChannel = new uniCloud.SSEChannel()
        sseChannel.on('message', (message?: any | null) => {
          if(typeof message === 'string') {
            this.messages.push(message)
          }
        })
        sseChannel.on('end', (message?: any | null) => {
          if(typeof message === 'string') {
            this.messages.push(message)
          }
        })
        sseChannel.on('open', () => {
          console.log('sseChannel open')
        })
        sseChannel.on('close', () => {
          console.log('sseChannel close')
        })
        sseChannel.on('error', (error: UniCloudError) => {
          console.log('sseChannel error: ' + error.message)
        })
        await sseChannel.open()
        const res = await uniCloud.callFunction({
          name: 'sse',
          data: {
            sseChannel
          }
        } as UniCloudCallFunctionOptions)
        console.log(res)
      }
    }
  }
</script>

<style>
</style>
